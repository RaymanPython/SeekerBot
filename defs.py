# это файл функций которые испоьзуются в боте но имеют только частное назначение


female_names = ["Анна", "Мария", "Александра", "Екатерина",
                "София", "Алиса", "Виктория", "Полина", "Маргарита",
                "Дарья",
                "Елизавета", "Анастасия", "Василиса", "Ольга",
                "Наталья", "Юлия", "Ангелина", "Ксения", "Диана",
                "Евгения",
                "Алёна", "Кристина", "Ева", "Светлана", "Милина",
                "Ирина", "Татьяна", "Вера", "Надежда", "Любовь",
                "Арина", "Марина", "Лилия", "Анжелика", "Мирослава",
                "Карина", "Эльвира", "Роза", "Алина", "Лариса",
                "Людмила", "Олеся", "Алла", "Валентина", "Инна",
                "Галина", "Милана", "Регина", "Яна", "Клавдия",
                "Любовь", "Елена",
                "Ксенья", "Алёна"]


male_names = ["Александр", "Дмитрий", "Иван", "Михаил", "Николай", "Сергей", "Андрей", "Антон", "Артем", "Максим"]


# функция которая узнает пол по имени
async def check_gender(name: str):
    # Здесь можно добавить логику для определения пола по имени
    # Например, можно использовать базу данных или API для определения пола по имени
    # В данном примере просто проверим последнюю букву имени
    # if name[-1].lower() in ['a', 'я']:
    #    return 0
    # elif name[-1].lower() in ['й', 'н']:
    #    return 1
    # else:
    #    # return 2
    name = name.lower()
    name = name[0].upper() + name[1:]
    if name in female_names:
        return 0
    elif name in male_names:
        return 1
    else:
        return 2


def string_about_user(user_data):
    return f"""Меня зовут {user_data.name}\nО себе {user_data.about}"""
